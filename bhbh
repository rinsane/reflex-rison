First(primary_expression) = { IDENTIFIER, CONSTANT, STRING_LITERAL, '(' }
First(postfix_expression) = { IDENTIFIER, CONSTANT, STRING_LITERAL, '(', '[', PTR_OP, INC_OP, DEC_OP }
First(argument_expression_list) = { IDENTIFIER, CONSTANT, STRING_LITERAL, '(', '[', PTR_OP, INC_OP, DEC_OP }
First(unary_expression) = { IDENTIFIER, CONSTANT, STRING_LITERAL, '(', PTR_OP, INC_OP, DEC_OP, '&', '*', '+', '-', '~', '!', SIZEOF }
First(unary_operator) = { '&', '*', '+', '-', '~', '!' }
First(cast_expression) = { IDENTIFIER, CONSTANT, STRING_LITERAL, '(', '*', '+', '-', '~', '!', SIZEOF }
First(multiplicative_expression) = { IDENTIFIER, CONSTANT, STRING_LITERAL, '(', '*', '/', '%' }
First(additive_expression) = { IDENTIFIER, CONSTANT, STRING_LITERAL, '(', '+', '-' }
First(shift_expression) = { IDENTIFIER, CONSTANT, STRING_LITERAL, '(', LEFT_OP, RIGHT_OP }
First(relational_expression) = { IDENTIFIER, CONSTANT, STRING_LITERAL, '(', '<', '>', LE_OP, GE_OP }
First(equality_expression) = { IDENTIFIER, CONSTANT, STRING_LITERAL, '(', EQ_OP, NE_OP }
First(and_expression) = { IDENTIFIER, CONSTANT, STRING_LITERAL, '(', '&' }
First(exclusive_or_expression) = { IDENTIFIER, CONSTANT, STRING_LITERAL, '(', '^' }
First(inclusive_or_expression) = { IDENTIFIER, CONSTANT, STRING_LITERAL, '(', '|' }
First(logical_and_expression) = { IDENTIFIER, CONSTANT, STRING_LITERAL, '(', AND_OP }
First(logical_or_expression) = { IDENTIFIER, CONSTANT, STRING_LITERAL, '(', OR_OP }
First(conditional_expression) = { IDENTIFIER, CONSTANT, STRING_LITERAL, '(', SIZEOF }
First(assignment_expression) = { IDENTIFIER, CONSTANT, STRING_LITERAL, '(', '*', '+', '-', '~', '!', SIZEOF }
First(assignment_operator) = { '=', MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, ADD_ASSIGN, SUB_ASSIGN, LEFT_ASSIGN, RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN }
First(expression) = { IDENTIFIER, CONSTANT, STRING_LITERAL, '(', '*', '+', '-', '~', '!', SIZEOF }
First(constant_expression) = { IDENTIFIER, CONSTANT, STRING_LITERAL, '(', '*', '+', '-', '~', '!', SIZEOF }
First(declaration) = { TYPEDEF, EXTERN, STATIC, AUTO, REGISTER, VOID, CHAR, SHORT, INT, LONG, FLOAT, DOUBLE, SIGNED, UNSIGNED, STRUCT, UNION, ENUM, CONST, VOLATILE }
First(declaration_specifiers) = { TYPEDEF, EXTERN, STATIC, AUTO, REGISTER, VOID, CHAR, SHORT, INT, LONG, FLOAT, DOUBLE, SIGNED, UNSIGNED, STRUCT, UNION, ENUM, CONST, VOLATILE }
First(init_declarator_list) = { IDENTIFIER, '*', '(', '[', CHAR, SHORT, INT, LONG, FLOAT, DOUBLE, SIGNED, UNSIGNED, CONST, VOLATILE, STRUCT, UNION, ENUM }
First(init_declarator) = { IDENTIFIER, '*', '(', '[', CHAR, SHORT, INT, LONG, FLOAT, DOUBLE, SIGNED, UNSIGNED, CONST, VOLATILE, STRUCT, UNION, ENUM }
First(storage_class_specifier) = { TYPEDEF, EXTERN, STATIC, AUTO, REGISTER }
First(type_specifier) = { VOID, CHAR, SHORT, INT, LONG, FLOAT, DOUBLE, SIGNED, UNSIGNED, STRUCT, UNION, ENUM, TYPE_NAME }
First(struct_or_union_specifier) = { STRUCT, UNION }
First(struct_or_union) = { STRUCT, UNION }
First(struct_declaration_list) = { VOID, CHAR, SHORT, INT, LONG, FLOAT, DOUBLE, SIGNED, UNSIGNED, STRUCT, UNION, ENUM, CONST, VOLATILE }
First(struct_declaration) = { VOID, CHAR, SHORT, INT, LONG, FLOAT, DOUBLE, SIGNED, UNSIGNED, CONST, VOLATILE }
First(specifier_qualifier_list) = { VOID, CHAR, SHORT, INT, LONG, FLOAT, DOUBLE, SIGNED, UNSIGNED, CONST, VOLATILE }
First(struct_declarator_list) = { '*', '(', '[', IDENTIFIER }
First(struct_declarator) = { '*', '(', '[', IDENTIFIER }
First(enum_specifier) = { ENUM }
First(enumerator_list) = { IDENTIFIER }
First(enumerator) = { IDENTIFIER }
First(type_qualifier) = { CONST, VOLATILE }
First(declarator) = { '*', '(', '[', IDENTIFIER }
First(direct_declarator) = { IDENTIFIER, '*', '(' }
First(pointer) = { '*' }
First(type_qualifier_list) = { CONST, VOLATILE }
First(parameter_type_list) = { VOID, CHAR, SHORT, INT, LONG, FLOAT, DOUBLE, SIGNED, UNSIGNED, STRUCT, UNION, ENUM, IDENTIFIER }
First(parameter_list) = { VOID, CHAR, SHORT, INT, LONG, FLOAT, DOUBLE, SIGNED
